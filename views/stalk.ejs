<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.1/socket.io.js"></script>
<style>
    #stalker-container > li {
        margin-top: 1em;
    }

    #stalker-container > li:first-child {
        margin-top: 0;
    }
</style>
<ol id="stalker-container">Connecting...</ol>
<script>
    const socket = io('https://thread-puller.ga');
    socket.emit('monitor', parseData);

    socket.on('user:update', () => socket.emit('all', parseData));

    function parseData(rawData) {
        const data =
                  Object
                      .values(rawData)
                      .sort((a, b) => a.date - b.date)
                      .reduce((acc, el) => {
                          const key = el.presenceId || Object.values(el.geo).join('-');
                          const { [ key ]: value = [] } = acc;

                          acc[ key ] = [ ...value, el ];

                          return acc;
                      }, {});

        updateStalk(Object.entries(data));
    }

    function updateStalk(data) {
        const root = document.getElementById('stalker-container');

        root.innerHTML = '';

        data
            .forEach(([ id, entries ]) => {
                const ol = document.createElement('ol');
                ol.className = 'stalker-group';

                entries.forEach((entry) => {
                    const li = document.createElement('li');

                    const $IP = entry.ip ? `<a href="https://whatismyipaddress.com/ip/${entry.ip}">IP</a> ` : '';

                    li.innerHTML = `${$IP}[<img src="https://www.countryflags.io/${entry.geo.country}/flat/24.png" alt="${entry.geo.country}" title="${entry.geo.country}, ${entry.geo.region}"> | ${entry.geo.city}] <a href="http://localhost${entry.location.page}">${entry.location.title || entry.location.page}</a>`;
                    ol.appendChild(li);
                });

                const li = document.createElement('li');
                li.className = 'stalker-group-container';

                const div = document.createElement('div');
                div.innerText = id;
                li.appendChild(div);

                li.appendChild(ol);

                root.appendChild(li);
            });
    }

    function fetchData() {
        socket.emit('all', parseData);
    }

    setInterval(fetchData, 15 * 1000);
</script>
