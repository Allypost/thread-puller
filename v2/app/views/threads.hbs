<nav>
  <a href="/">&larr; Back</a> | <a href="https://boards.4chan.org/{{board.board}}" rel="noopener noreferrer">Go to board</a>
</nav>

<h1>Board: {{board.link}}</h1>
<h2>{{{board.description}}}</h2>

<form class="sort">
  <label for="sort--field">
    Sort posts by:
  </label>
  <select name="sb" id="sort--field" onchange="this.parentElement.submit()">
    <option {{#if (eq sort.by "") }}selected{{/if}} value="">None</option>
    <option {{#if (eq sort.by "images") }}selected{{/if}} value="images">media #</option>
    <option {{#if (eq sort.by "replies") }}selected{{/if}} value="replies">reply #</option>
  </select>
  <select name="sd" id="sort--direction" onchange="this.parentElement.submit()">
    <option {{#if (eq sort.dir "desc") }}selected{{/if}} value="desc">↓</option>
    <option {{#if (eq sort.dir "asc") }}selected{{/if}} value="asc">↑</option>
  </select>
  <noscript>
    <button type="submit">Sort</button>
  </noscript>
</form>

<style>
  :root {
    --max-height: 8.75em;
  }

  nav {
    font-size: 3em;
    font-weight: bold;
  }

  main {
    display: grid;
    grid-template-columns: repeat(var(--column-count), minmax(0, 1fr));
    gap: 1em;
  }

  .sort {
    margin: 1em 1em .5em;
    text-align: right;
  }

  article {
    display: flex;
    flex-flow: row wrap;
    border-radius: var(--border-radius);
    box-shadow: 0 2px 2px 0 #0000003d,
    0 3px 1px -2px #00000038,
    0 1px 5px 0 #0000004d;
    transform: translateZ(0);
    align-self: center;
    text-align: left;
    padding: var(--article-padding);
    color: #2f2f2f;
    background-color: #9e9e9e;
  }

  article h1 {
    margin: 0 0 var(--article-padding);
    text-align: center;
    font-size: 1.875em;
    flex-basis: 100%;
  }

  article h1 a {
    color: #050505;
  }

  article .description {
    position: relative;
    padding: 0.75em;
    overflow: hidden;
    text-overflow: ellipsis;
    hyphens: auto;
    overflow-wrap: break-word;
    flex: 2;
  }

  article .description.expandable {
    cursor: zoom-in;
  }

  article .description.expandable::after {
    content: "";
    position: absolute;
    bottom: -1px;
    left: 0;
    right: 0;
    height: 2em;
    background: linear-gradient(to top, rgba(0, 0, 0, .69), transparent);
  }

  article .description.expandable.expanded {
    cursor: zoom-out;
    max-height: none;
  }

  article .description.expandable.expanded::after {
    content: none;
  }

  article .content.expanded-media .media {
    max-height: none;
    flex-basis: 100%;
  }

  article .content.expanded-description,
  article .content.expanded-media {
    max-height: none;
  }

  article .description:empty {
    display: none;
  }

  article .description .quote {
    color: #8bb125;
  }

  article .description .quotelink {
    color: #ff7b82;
    text-decoration: underline;
  }

  article .description .quotelink::after {
    content: " \2192";
  }

  article .description s {
    cursor: help;
    text-decoration: none;
    color: #050505;
    background: #050505;
    box-shadow: 0 0 1em -8px #fafafa;
  }

  article .description s:hover {
    color: #fafafa;
  }

  article .content {
    border-radius: var(--border-radius) var(--border-radius) 0 0;
    overflow: hidden;
    flex-basis: 100%;
    display: flex;
    flex-flow: row wrap;
    background-color: #383838;
    color: #fafafa;
    max-height: var(--max-height);
  }

  .content > * {
    flex: 1 0 0;
    max-height: var(--max-height);
  }

  article .media {
    display: flex;
    align-self: center;
  }

  article .media .img-container {
    position: relative;
    width: 100%;
    height: auto;
  }

  .img-container .spinner {
    display: none;
    position: absolute;
    top: .5em;
    left: .5em;
  }

  .img-container img.loading + .spinner {
    display: inherit;
  }

  .img-container img.loading {
    filter: progid:dximagetransform.microsoft.blur(pixelradius="3");
    filter: blur(3px);
  }

  .img-container img {
    cursor: zoom-in;
  }

  .img-container img[data-expanded] {
    cursor: zoom-out;
  }

  article .media img {
    width: 100%;
    object-position: center;
    object-fit: contain;
    height: 100%;
    height: -webkit-fill-available;
  }

  article .media video {
    width: 100%;
    object-position: center;
    object-fit: contain;
  }

  article footer {
    display: flex;
    align-items: center;
    border-radius: 0 0 var(--border-radius) var(--border-radius);
    background-color: #5e5e5e;
    color: #fafafa;
    text-align: center;
    justify-content: center;
    padding: .5em .8em;
    gap: .25em;
    flex-basis: 100%;
  }

  .spinner {
    display: inline-block;
    width: 50px;
    height: 50px;
    animation: spin 1s cubic-bezier(.65, .05, .3, .8) infinite;
    border: 3px solid rgba(255, 255, 255, .3);
    border-top-color: #ffffff;
    border-radius: 50%;
    background: #455a64;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
</style>
<noscript>
  <style>
    article noscript + * {
      display: none;
    }

    article .content {
      max-height: none;
    }
  </style>
</noscript>

<main>
  {{#each threads}}
    <article id="p{{this.id}}">
      <h1>
        <a href="/{{../board.board}}/thread/{{this.thread}}/">
          {{#if this.body.title}}
            {{{this.body.title}}}
          {{else}}
            <em>No title</em>
          {{/if}}
        </a>
      </h1>

      <div class="content">
        {{#if this.files}}
          <section class="media">
            {{#each this.files}}
              {{#if this.meta.isImage ~}}
                <noscript>
                  <a
                    href="{{this.variations.full.src.remote}}"
                  >
                    <img
                      loading="lazy"
                      draggable="false"
                      src="{{this.variations.full.src.remote}}"
                      alt="{{ this.name }}"
                      title="{{ this.name }}"
                      style="aspect-ratio: {{this.variations.full.dimensions.width}} / {{this.variations.full.dimensions.height}};"
                    >
                  </a>
                </noscript>
                <div class="img-container">
                  <img
                    loading="lazy"
                    draggable="false"
                    src="{{this.variations.thumb.src.remote}}"
                    data-full-local="{{this.variations.full.src.local}}"
                    data-full-remote="{{this.variations.full.src.remote}}"
                    data-thumb-remote="{{this.variations.thumb.src.remote}}"
                    data-thumb-local="{{this.variations.thumb.src.local}}"
                    alt="{{ this.name }}"
                    title="{{ this.name }}"
                    style="aspect-ratio: {{this.variations.full.dimensions.width}} / {{this.variations.full.dimensions.height}};"
                  >
                  <div class="spinner"></div>
                </div>
              {{/if}}
              {{#if this.meta.isVideo }}
                <video
                  muted
                  loop
                  controls
                  playsinline
                  poster="{{this.variations.thumb.src.remote}}"
                  data-thumb-remote="{{this.variations.thumb.src.remote}}"
                  data-thumb-local="{{this.variations.thumb.src.local}}"
                  preload="none"
                  title="{{this.name}}"
                >
                  <source src="{{this.variations.full.src.remote}}" type="{{this.mimeType}}" data-type="remote">
                  <source src="{{this.variations.full.src.local}}" type="{{this.mimeType}}" data-type="local">
                  <a
                    href="{{this.variations.full.src.remote}}"
                    rel="noopener noreferrer"
                  >
                    Video link
                  </a>
                </video>
              {{/if}}
            {{/each}}
          </section>
        {{/if}}

        {{#if this.body.content }}
          <section class="description">
            {{{this.body.content}}}
          </section>
        {{/if}}
      </div>

      <footer>
        <span title="{{ this.meta.media }} images/videos">
          {{ this.meta.media }} media
        </span> | <span title="{{ this.meta.replies }} posts in thread">
        {{ this.meta.replies }} replies
      </span>
      </footer>
    </article>
  {{/each}}
</main>

<script defer async>
  (function () {
    function handleImageError($el) {
      return function (event) {
        switch ($el.src) {
          case $el.dataset.thumbRemote: {
            $el.src = $el.dataset.thumbLocal;
            return;
          }

          case $el.dataset.fullRemote: {
            $el.src = $el.dataset.fullLocal;
            return;
          }


          case $el.dataset.thumbLocal:
          case $el.dataset.fullLocal: {
            $el.src = "/assets/images/deleted.gif";
            return;
          }
        }
      }
    }

    function handleVideoError($el) {
      return function (event) {
        console.log(event);
        if ($el.poster === $el.dataset.thumbRemote) {
          $el.poster = $el.dataset.thumbLocal;
          return;
        }
      }
    }

    document
      .querySelectorAll('article video')
      .forEach(function ($el) {
        $el.addEventListener('error', handleVideoError($el));

        $el.addEventListener("click", function (event) {
          event.preventDefault();
          event.stopPropagation();

          if (this.paused) {
            this.play();
          } else {
            this.pause();
          }
        });

        $el.addEventListener("play", function (event) {
          event.preventDefault();
          event.stopPropagation();

          $el.parentElement.parentElement.classList.add("expanded-media");
        });

        $el.addEventListener("pause", function (event) {
          event.preventDefault();
          event.stopPropagation();

          $el.parentElement.parentElement.classList.remove("expanded-media");
        });
      })
    ;

    document
      .querySelectorAll('article img')
      .forEach(function ($el) {
        $el.addEventListener('error', handleImageError($el));

        $el.addEventListener('load', function (event) {
          $el.classList.remove('loading');
        });

        $el.addEventListener("click", function (event) {
          event.preventDefault();
          event.stopPropagation();

          switch ($el.src) {
            case $el.dataset.thumbRemote:
            case $el.dataset.thumbLocal: {
              $el.classList.add("loading");
              $el.src = $el.dataset.fullRemote;
              $el.parentElement.parentElement.parentElement.classList.add("expanded-media");
              $el.style.height = "auto";
              $el.dataset.expanded = "";
              return;
            }
            case $el.dataset.fullRemote:
            case $el.dataset.fullLocal: {
              $el.classList.add("loading");
              $el.src = $el.dataset.thumbRemote;
              $el.parentElement.parentElement.parentElement.classList.remove("expanded-media");
              $el.style.removeProperty('height');
              delete $el.dataset.expanded;
              return;
            }
          }
        })
      })
    ;

    document
      .querySelectorAll('article .description')
      .forEach(function ($el) {
        var oldMaxHeight = $el.style.maxHeight;
        $el.style.maxHeight = 'none';
        var overflows = $el.clientHeight <= $el.parentElement.clientHeight;
        if (oldMaxHeight) {
          $el.style.maxHeight = oldMaxHeight;
        } else {
          $el.style.removeProperty('max-height');
        }

        if (!$el.getAttribute("style")) {
          $el.removeAttribute("style");
        }

        if (overflows) {
          return;
        }

        $el.classList.add("expandable");

        $el.addEventListener('click', function (event) {
          event.preventDefault();
          event.stopPropagation();

          var isExpanded = $el.classList.contains("expanded");

          if (isExpanded) {
            $el.classList.remove("expanded");
            $el.parentElement.classList.remove("expanded-description");
          } else {
            $el.classList.add("expanded");
            $el.parentElement.classList.add("expanded-description");
          }
        });
      })
    ;
  })()
</script>
